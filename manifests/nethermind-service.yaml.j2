apiVersion: v1
kind: Service
metadata:
  name: nethermind
spec:
  type: LoadBalancer
  selector:
    app: nethermind
  ports:
  - name: nethermind-tcp
    port: {{ nethermind_port }}
    targetPort: {{ nethermind_port_target }}
    nodePort: 30011

---

apiVersion: v1
kind: Service
metadata:
  name: nethermind-udp
spec:
  type: LoadBalancer
  selector:
    app: nethermind
  ports:
  - name: nethermind-udp
    protocol: UDP
    port: {{ nethermind_port }}
    targetPort: {{ nethermind_port_target }}
    nodePort: 30012

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nethermind
  labels:
    app: nethermind
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nethermind
  template:
    metadata:
      labels:
        app: nethermind
    spec:
      volumes:
        - name: eth2pv
          persistentVolumeClaim:
            claimName: eth2claim
      containers:
        - name: nethermind
          image: {{ nethermind_image_tag }}
          imagePullPolicy: "Always"
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
          ports:
            - containerPort: {{ nethermind_json_rpc_port }}
            - containerPort: {{ nethermind_port }}
            - containerPort: {{ nethermind_port }}
              protocol: UDP            
          command: ["./Nethermind.Runner"]
          args: ["--config", "mainnet_beam", "--baseDbPath", "/root/nethermind_db", "-l", "DEBUG"]
          volumeMounts:
            - mountPath: "/root"
              name: eth2pv
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoExecute
          tolerationSeconds: 20
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 20