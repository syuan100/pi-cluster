apiVersion: v1
kind: Service
metadata:
  name: geth
  labels:
    k8s-app: geth
spec:
  type: LoadBalancer
  selector:
    app: geth
  ports:
  - name: geth-json-rpc-tcp
    port: {{ geth_json_rpc_port }}
    targetPort: {{ geth_json_rpc_port_target }}
    nodePort: 30013
  - name: geth-tcp
    port: {{ geth_port }}
    targetPort: {{ geth_port_target }}
    nodePort: 30011
  - name: geth-metrics
    port: 6060
    targetPort: 6060
    nodePort: 30014

---

apiVersion: v1
kind: Service
metadata:
  name: geth-udp
spec:
  type: LoadBalancer
  selector:
    app: geth
  ports:
  - name: geth-udp
    protocol: UDP
    port: {{ geth_port }}
    targetPort: {{ geth_port_target }}
    nodePort: 30012

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: geth-metrics
  namespace: monitoring
  labels:
    k8s-app: geth-metrics-monitor
spec:
  selector:
    matchLabels:
      k8s-app: geth
  namespaceSelector:
    matchNames:
    - default
  endpoints:
  - targetPort: 6060
    path: "/debug/metrics/prometheus"
    interval: 15s

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: geth
  labels:
    app: geth
spec:
  replicas: 1
  revisionHistoryLimit: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: geth
  template:
    metadata:
      labels:
        app: geth
    spec:
      volumes:
        - name: eth2pv
          persistentVolumeClaim:
            claimName: eth2claim
      containers:
        - name: geth
          image: {{ geth_image_tag }}
          imagePullPolicy: "Always"
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: false
          ports:
            - containerPort: {{ geth_json_rpc_port }}
            - containerPort: 6060
            - containerPort: {{ geth_port }}
            - containerPort: {{ geth_port }}
              protocol: UDP            
          command: ["geth"]
          args: ["--http", "--http.addr", "0.0.0.0", "--http.vhosts=*", "--cache", "512", "--metrics.addr", "0.0.0.0", "--metrics"]
          volumeMounts:
            - mountPath: "/root"
              name: eth2pv
      tolerations:
        - key: node.kubernetes.io/not-ready
          effect: NoExecute
          tolerationSeconds: 20
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 20